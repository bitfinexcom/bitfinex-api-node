2.0.10
- WSv2: ignore notification auth seq numbers (no longer provided by API)

2.0.9

- WS2Manager: add managedUnsubscribe()
- WS2Manager: add close()
- WS2Manager: add getAuthenticatedSocket()
- WSv2: add suppport for liquidations feed (status methods)
- WSv2: add reconnect throttler in case of connection reset w/ many open sockets

2.0.8

- Bump dependency versions

2.0.7

- WSv2: increase data chan limit to 30 (732499b)

2.0.6

- WSv2: decrease data chan limit to 25 (6816992)
- add close-positions script (face1fc)
- add symbol-details script (708849e)
- add currencies script (cff1647)
- add funding info fetch example (337f202)
- standard --fix (5e6f786, fb5e319, b56b157)
- fix lastMidPrice in example courtesy of MowgliB (004f904)

2.0.5

- WSv2: improve reconnect functionality courtesy of cwolters (950105d)
- WSv2: add funding info example (b597c4d)
- WSv2: add order creation w/ TIF example (f25df58)
- bump dep versions (5e4d439, d72d56f)
- mv babel deps to dev-deps (a576c57)

2.0.4

- add symbols back into ws2 ticker messages [models updated] (1f4a7eb)

2.0.3

- add browser builds (e651496)
- add errors in case of missing chan sub filters (4607154)
- remove symbols from ws2 ticker messages (06b0e13)

2.0.2

- improve logging (ceddd87, 404bd7a)
- export WS2Manager class (afcdefe)

2.0.1

- extract most logic into external libraries (13edff8)
- add support for all currencies in funding offer/loan/credit history (e39f360)
- add automatic re-subscribe on reconnect (e4f65ec)
- add withAllSockets method to manager (90c7fd5)
- split trades listeners between public and private trades (3a428a6)
- allow multiple nonce consumers (2a51dcd)
- REST API v2: add currencies method (122648a)
- OrderBook: add funding support (d8572a6)
- LedgerEntry: add wallet (e5b91c5)
- and more!

2.0.0

- added CLI commands (971e8bf)
- added TradingTicker model (1099273)
- added model class transform support to RESTv2 (1099273)
- added ability to unserialize objects in Model.unserialize() (b23a576)
- added ledgers & movements examples (176d5a9)
- filled in FundingInfo model (268ecc9)
- updated MarginInfo model indices (268ecc9)
- increased max WSv2 listener limit to 1k (5ade818)
- REST API v2: fix calc balances API path (5e2f834)
- WS API v2: added notifyUI helper to generate broadcasts (22cb5bc)
- WS API v2: added support for DMS flag in auth (11e57b1)
- WS API v2: added socket manager for auto multiplexing (f693bb9)
- WS API v2: fixed error notification seq # tracking (1b1c1f3)
- WS API v2: fixed trades event name resolution w/ seq numbers (46af211)
- REST API v2: added ability to auth via token (07f8756)
- REST API v2: added ability to fetch order history for all symbols (57f8c7b)
- REST API v2: added ability to fetch account trades for all symbols (14b13c1)
- REST API v2: added user info endpoint & associated model (36c0079)
- OrderBook: fixed unserialization for raw books (01b5ce4)
- OrderBook: removal of unknown entries no longer raises an error (7bd5bc2)
- OrderBook: array sort is maintained on update (520a9a0)
- OrderBook: converts exp notation numbers to fixed for checksum (2c8487c)
- and more!

2.0.0-beta.1

- refactored general model handling (broke out field indexes) (c616696)
- REST API v1: add support for close position endpoint (14db6fe)
- REST API v2: added query param support to the candles() handler (be779c3)
- REST API v2: added platform status endpoint (5e3fe56)
- WS API v2: clean up channel subscriptions on open/close (7c17b96, 92ce89d)
- WS API v2: now passes update packet & order to Order model events (c616696)
- WS API v2: added support for new order flags (79c4a40, 3406ac3)
- WS API v2: added support for filtering by id to order event listeners (be779c3)
- WS API v2: added support for managed order book checksum verification (cab9635)
- WS API v2: added support for atomic order updates (36d10c4)
- OrderBook: added arrayOBMidPrice helper (f0e3074)
- OrderBook: added checksum helpers (cab9635)
- refactored general model handling (broke out field indexes) (c616696)
- and many small fixes & tweaks

2.0.0-beta

- WS API v2: added optional auto-reconnect
- WS API v2: added optional packet watchdog
- WS API v2: added optional order packet buffering via multi-op endpoint
- WS API v2: added optional order book & candle managment/persistence
- WS API v2: added optional seq number verification/audit
- WS API v2: added many extra callback/listener funcs (i.e. onMaintenanceStart)
- WS API v2: added ability to mass-unsubscribe listeners by group ID
- WS API v2: most callback methods now support message filtering
- WS API v2: replaced transform logic w/ model classes (i.e. Order)
- WS API v2: many methods now return promises, such as submitOrder()
- REST API v2: transform method updated to match WSv2 class
- REST API v1: minor refactor, methods unchanged
- REST API v2: minor refactor, methods unchanged
- WS API v1: minor refactor, methods unchanged
- BFX constructor exposes & caches clients on `.rest()` and `.ws()` methods
- Updated ws2 examples
- Added model classes (OrderBook, Order, Trade, etc)

1.2.1

- REST API v2: use /candles/ endpoint for candles data
- WS API v2: Candles event provides key
- Improve error message for nonce errors
- Examples: added example for WS2 orders

1.2.0

- REST API v1: Added support for `/orders/hist` endpoint
- REST API v2: Added support for `auth/r/trades/{symbol}/hist` endpoint
- WS API v2: Candles supports now `key` to identify subscription
- REST API v1: Fix `claim_position` argument handling
